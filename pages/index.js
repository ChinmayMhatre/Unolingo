import Head from "next/head";
import React, { useState, useEffect } from "react";
import { DragDropContext, Draggable, Droppable } from "react-beautiful-dnd";
import { v4 as uuid } from "uuid";
import Word from "../components/Word";
import Option from "../components/Option";
import services from "../utils/services";
import { ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

export default function Home() {
    const items = [
        { id: uuid(), content: "speak" },
        { id: uuid(), content: "Spanish" },
        { id: uuid(), content: "I" },
    ];

    const rowsBackend = {
        Question: {
            items: items,
        },
        Answer: {
            items: [],
        },
    };

    const [rows, setRows] = useState(rowsBackend);

    const [winReady, setwinReady] = useState(false);
    useEffect(() => {
        setwinReady(true);
    }, []);

    return (
        <div>
            <Head>
                <title>Unolingo</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/happyduo.ico" />
            </Head>
            <main className="flex justify-center items-center h-screen w-screen bg-[#58cc02]">
                <DragDropContext
                    onDragEnd={(result) =>
                        services.onDragEnd(result, rows, setRows)
                    }
                >
                    <div className="wrapper bg-gray-100 md:w-3/5 w-full   h-4/5 rounded-xl p-10 shadow-xl">
                        <h2 className="text-3xl font-medium">
                            Write this in English
                        </h2>
                        <div className="question-wrapper mt-16 flex gap-3 text-lg">
                            <Word text="Yo" hint="I"/>
                            <Word text="hablo" hint="speak" />
                            <Word text="espaÃ±ol" hint="Spanish" />
                        </div>
                        <div className="answer-wrapper mt-10">
                            {winReady ? (
                                <Droppable
                                    droppableId="Answer"
                                    direction="horizontal"
                                >
                                    {(provided, snapshot) => {
                                        return (
                                            <div
                                                className="answers flex gap-2 w-full h-10"
                                                ref={provided.innerRef}
                                                {...provided.droppableProps}
                                            >
                                                {rows["Answer"].items.map(
                                                    (item, index) => {
                                                        return (
                                                            <Draggable
                                                                key={item.id}
                                                                draggableId={
                                                                    item.id
                                                                }
                                                                index={index}
                                                            >
                                                                {(
                                                                    provided,
                                                                    snapshot
                                                                ) => {
                                                                    return (
                                                                        <Option
                                                                            item={
                                                                                item
                                                                            }
                                                                            provided={
                                                                                provided
                                                                            }
                                                                        />
                                                                    );
                                                                }}
                                                            </Draggable>
                                                        );
                                                    }
                                                )}
                                                {provided.placeholder}
                                            </div>
                                        );
                                    }}
                                </Droppable>
                            ) : null}

                            <hr className=" border-gray-300" />
                            <br />
                            <hr className="mt-5 border-gray-300" />
                        </div>
                        {winReady ? (
                            <Droppable
                                droppableId="Question"
                                direction="horizontal"
                            >
                                {(provided, snapshot) => {
                                    return (
                                        <div
                                            className="Question option-wrapper mt-16 flex items-start gap-2 h-28"
                                            ref={provided.innerRef}
                                            {...provided.droppableProps}
                                        >
                                            {rows["Question"].items.map(
                                                (item, index) => {
                                                    return (
                                                        <Draggable
                                                            key={item.id}
                                                            draggableId={
                                                                item.id
                                                            }
                                                            index={index}
                                                        >
                                                            {(
                                                                provided,
                                                                snapshot
                                                            ) => {
                                                                return (
                                                                    <Option
                                                                        item={
                                                                            item
                                                                        }
                                                                        provided={
                                                                            provided
                                                                        }
                                                                    />
                                                                );
                                                            }}
                                                        </Draggable>
                                                    );
                                                }
                                            )}
                                            {provided.placeholder}
                                        </div>
                                    );
                                }}
                            </Droppable>
                        ) : null}

                        <div className="flex justify-center mt-10 md:mt-5">
                            <button
                                onClick={() =>
                                    services.handleSubmit(rows, setRows, items)
                                }
                                className="bg-[#58cc02] hover:bg-[#448d0d] transition-all text-white font-medium text-lg px-10 py-2  rounded-lg shadow-lg "
                            >
                                Check Your Answer
                            </button>
                        </div>
                    </div>
                </DragDropContext>
                <ToastContainer
                    position="top-right"
                    autoClose={5000}
                    hideProgressBar={false}
                    newestOnTop={false}
                    closeOnClick
                    rtl={false}
                    pauseOnFocusLoss
                    draggable
                    pauseOnHover
                />
            </main>
        </div>
    );
}
